CREATE TABLE ARM_CUST_DEPOSIT_HIST
(     
  DC_TRANSACTION        DATE            NOT NULL,
  ID_STR_RT             VARCHAR2(128)   NOT NULL, 
  AI_TRN		VARCHAR2(128)   NOT NULL,
  TY_TRN		VARCHAR2(60)    NOT NULL,
  CUST_ID               VARCHAR2(128)   NOT NULL,
  ASSOC                 VARCHAR2(128),
  AMOUNT                VARCHAR2(75) 
);

ALTER TABLE ARM_CUST_DEPOSIT_HIST ADD FOREIGN KEY (CUST_ID) REFERENCES PA_CT(ID_CT);

CREATE TABLE ARM_GRP_CLS_TND
(
  LU_CLS_TND  VARCHAR2(40)	NOT NULL,
  TND_CODE    VARCHAR2(10)      NOT NULL,
  ED_CO       VARCHAR2(20)      NOT NULL,
  ED_LA       VARCHAR2(20)      NOT NULL,
  DE_CLS_TND  VARCHAR2(255)     NOT NULL
);

CREATE TABLE ARM_RSV_POS_LN_ITM_DTL ( 
  AI_TRN          VARCHAR2 (128)  NOT NULL, 
  AI_LN_ITM       NUMBER        NOT NULL, 
  SEQUENCE_NUM    NUMBER (3)    NOT NULL, 
  ORG_AI_TRN      VARCHAR2 (128), 
  ORIG_AI_LN_ITM  NUMBER, 
  ORIG_SEQ_NUM    NUMBER (3)
); 

ALTER TABLE ARM_CURRENCY_RATE
ADD (ED_CO VARCHAR2(10),
    ED_LA VARCHAR2(10),
    CD_FIN VARCHAR2(10));

ALTER TABLE TR_LTM_TND ADD CODE VARCHAR2(20);

ALTER TABLE PA_CT ADD CUST_BALANCE VARCHAR2(75);

ALTER TABLE ARM_POS_RSV 
ADD (DEPOSIT_AMT	  VARCHAR2(75),
     ORIG_RSV_ID	  VARCHAR2(128)); 

ALTER TABLE TR_LTM_RTL_TRN
ADD (DOC_NUM VARCHAR2(20),
VAT_COMMENTS VARCHAR2(200),
TY_DOC VARCHAR2(10),
FL_EXCHANGE NUMBER(1)
);

ALTER TABLE TR_RTL ADD FISCAL_DOC_NUMBERS VARCHAR2(2000);

ALTER TABLE TR_TRN
ADD (FISCAL_RECEIPT_NUMBER	VARCHAR2(128),
     FISCAL_RECEIPT_DATE	DATE);

ALTER TABLE ARM_POS_RSV DROP PRIMARY KEY CASCADE;

ALTER TABLE ARM_POS_RSV ADD PRIMARY KEY (ID_RESERVATION);

ALTER TABLE ARM_POS_RSV ADD FOREIGN KEY (ORIG_RSV_ID) REFERENCES ARM_POS_RSV(ID_RESERVATION);

ALTER TABLE ARM_RSV_POS_LN_ITM_DTL ADD PRIMARY KEY ( AI_TRN, AI_LN_ITM, SEQUENCE_NUM );

ALTER TABLE ARM_RSV_POS_LN_ITM_DTL ADD 
  FOREIGN KEY (AI_TRN,AI_LN_ITM,SEQUENCE_NUM) REFERENCES RK_POS_LN_ITM_DTL (AI_TRN,AI_LN_ITM,SEQUENCE_NUMBER);

ALTER TABLE ARM_RSV_POS_LN_ITM_DTL ADD 
  FOREIGN KEY (ORG_AI_TRN,ORIG_AI_LN_ITM,ORIG_SEQ_NUM) REFERENCES RK_POS_LN_ITM_DTL (AI_TRN,AI_LN_ITM,SEQUENCE_NUMBER);

ALTER TABLE ARM_ASIS_TXN_DATA ADD FOREIGN KEY (AI_TRN) REFERENCES TR_TRN(AI_TRN);

ALTER TABLE ARM_FISCAL_DOC_NO ADD FOREIGN KEY (REGISTER_ID, ID_STR_RT) REFERENCES AS_TL(ID_RPSTY_TND, ID_STR_RT);

ALTER TABLE ARM_CURRENCY_RATE DROP PRIMARY KEY;

ALTER TABLE ARM_CURRENCY_RATE ADD PRIMARY KEY (ID_CNY_FROM, ID_CNY_TO, ED_CO, ED_LA);

ALTER TABLE ARM_FISCAL_DOCUMENT ADD PRIMARY KEY (AI_TRN, DOC_NUM, TY_DOC);

ALTER TABLE TR_LTM_RTL_TRN
ADD FOREIGN KEY (AI_TRN, DOC_NUM, TY_DOC) REFERENCES ARM_FISCAL_DOCUMENT(AI_TRN, DOC_NUM, TY_DOC);

ALTER TABLE TR_RTL MODIFY DISCOUNT_TYPES VARCHAR2(2000);

ALTER TABLE ARM_ITM_SOH
MODIFY(
	QU_AVAILABLE		DEFAULT 0,
	QU_UNAVAILABLE		DEFAULT 0,
	QU_SALE_TOTAL		DEFAULT 0,
	QU_RECEIPT		DEFAULT 0,
	QU_TRANSFER		DEFAULT 0,
	QU_STOCK_ADJ		DEFAULT 0,
	QU_ON_ORDER		DEFAULT 0,
	QU_STORE_AVAILABLE	DEFAULT 0,
	QU_STORE_UNAVAILABLE	DEFAULT 0);

ALTER TABLE ARM_TAX_FREE MODIFY RATIO NUMBER;

ALTER TABLE ARM_FISCAL_DOCUMENT MODIFY WEIGHT NUMBER;

ALTER TABLE PA_CT MODIFY SC_CT VARCHAR(6);

ALTER TABLE ARM_FISCAL_DOCUMENT
MODIFY (COUNTY NULL,
STATE NULL);

CREATE OR REPLACE VIEW RK_TXN_HEADER
(CUST_ID, TY_TRN, ID_STR_RT, TY_STR_RT, ID_OPR, 
 TS_TRN_PRC, TS_TRN_SBM, TY_GUI_TRN, PAY_TYPES, TOTAL_AMT, 
 AI_TRN, CONSULTANT_ID, REDUCTION_AMOUNT, NET_AMOUNT, DISCOUNT_TYPES, 
 ITEMS_IDS, REGISTER_ID, FN_PRS, LN_PRS, EXP_DT, 
 REF_ID, CURRENCY_CD, IS_SHIPPING, FISCAL_RECEIPT_NUM, FISCAL_RECEIPT_DT, 
 FISCAL_DOC_NUMBERS)
AS 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, TR_TRN.ID_STR_RT, 
    PA_STR_RTL.ID_BRAND, OPR.ARM_EXTERNAL_ID ID_OPR, TR_TRN.TS_TRN_PRC, 
    TR_TRN.TS_TRN_SBM, TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, 
    RK_PAY_TRN.TOTAL_AMT, RK_PAY_TRN.AI_TRN, ASSOCIATE.ARM_EXTERNAL_ID CONSULTANT_ID, 
    TR_RTL.REDUCTION_AMOUNT, TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, 
    TR_RTL.ITEMS_IDS, TR_TRN.ID_RPSTY_TND, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
    DECODE(RK_PAY_TRN.TYPE_ID, 'TRNPSO', ARM_POS_PRS.EXP_DT, 'TRNCGO', ARM_POS_CSG.EXP_DT, 'TRNRSV', ARM_POS_RSV.EXP_DT, NULL) EXP_DT, 
    DECODE(RK_PAY_TRN.TYPE_ID, 'TRNPSO', ARM_POS_PRS.ID_PRESALE, 'TRNCGO', ARM_POS_CSG.ID_CONSIGNMENT, 'TRNRSV', ARM_POS_RSV.ID_RESERVATION, NULL) REF_ID, 
    PA_STR_RTL.TY_CNY CURRENCY_CD, DECODE(RK_SHIP_REQ.SEQ_NUM, NULL, 0, 1) IS_SHIPPING, 
    TR_TRN.FISCAL_RECEIPT_NUMBER FISCAL_RECEIPT_NUM, TR_TRN.FISCAL_RECEIPT_DATE FISCAL_RECEIPT_DT, 
    TR_RTL.FISCAL_DOC_NUMBERS FISCAL_DOC_NUMBERS 
FROM TR_TRN INNER JOIN 
( 
 	 RK_PAY_TRN LEFT OUTER JOIN 
	 ( 
	 	 TR_RTL LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID = PA_PRS.ID_PRTY_PRS 
		 LEFT OUTER JOIN PA_EM ASSOCIATE ON TR_RTL.CONSULTANT_ID=ASSOCIATE.ID_EM 
		 LEFT OUTER JOIN RK_SHIP_REQ ON (RK_SHIP_REQ.AI_TRN=TR_RTL.AI_TRN AND RK_SHIP_REQ.SEQ_NUM=0) 
		 LEFT OUTER JOIN ARM_POS_PRS ON TR_RTL.AI_TRN = ARM_POS_PRS.AI_TRN 
		 LEFT OUTER JOIN ARM_POS_CSG ON TR_RTL.AI_TRN = ARM_POS_CSG.AI_TRN 
		 LEFT OUTER JOIN ARM_POS_RSV ON TR_RTL.AI_TRN = ARM_POS_RSV.AI_TRN 
	 ) 
	 ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN 
) 
ON TR_TRN.AI_TRN=RK_PAY_TRN.AI_TRN AND TR_TRN.TY_TRN IN ('TRNPAY') 
INNER JOIN 
( 
	PA_OPR INNER JOIN PA_EM OPR ON PA_OPR.ID_EM=OPR.ID_EM 
) 
ON TR_TRN.ID_OPR=PA_OPR.ID_EM 
INNER JOIN PA_STR_RTL ON TR_TRN.ID_STR_RT=PA_STR_RTL.ID_STR_RT;

CREATE OR REPLACE VIEW V_ARM_ITEM_SALE
(ID_STR_RT, DIV, DEPT_ID, DEPT_NM, CLASS_ID, 
 CLASS_NM, ITEM_ID, ITEM_NM, BARCODE, SALES_DATE, 
 SALE_MARKDOWN_AMT, NET_SALE_AMT, TOTAL_SALE_QTY, RTN_MARKDOWN_AMT, NET_RTN_AMT, 
 TOTAL_RTN_QTY)
AS 
( 
SELECT SUMM.ID_STR_RT ID_STR_RT, 
	DECODE(SUBSTR(SUMM.ITEM_DEPT_ID,1, 1), '1', 'GAW', '2', 'GAM', '3', 'GAUJUN', '4', 'EAW', '5', 'EAM', '6', 'EAU', '7', 'ACGIFT', '8', 'ACTEXT', '9', 'ACTABLE', '99') DIV, 
	SUMM.ITEM_DEPT_ID DEPT_ID, DEPT.NM_DPT_POS DEPT_NM  , NVL(SUMM.ITEM_CLSS_ID,'NONE') CLASS_ID, NVL(CLASS.NM_CLSS,'NONE') CLASS_NM, 
	SUMM.ID_ITM ITEM_ID,  ITEMSTORE.NM_ITM ITEM_NM, DECODE(SUMM.MISC_ITEM_ID, NULL, ITEM.BARCODE, SUMM.MISC_ITEM_ID) BARCODE, 
	SUMM.SALES_DATE SALES_DATE, 
	NVL(SUMM.MARKDOWN_AMT,'0')  SALE_MARKDOWN_AMT, NVL(SUMM.NET_AMOUNT,'0') NET_SALE_AMT, TOTAL_QUANTITY TOTAL_SALE_QTY, 
	'0' RTN_MARKDOWN_AMT, '0' NET_RTN_AMT, 0 TOTAL_RTN_QTY 
FROM RK_SALES_SUMMARY SUMM, AS_ITM ITEM, AS_ITM_RTL_STR ITEMSTORE, ID_DPT_PS DEPT,  ARM_CLASS CLASS 
WHERE SUMM.ID_ITM = ITEM.ID_ITM 
	AND ITEM.ID_ITM = ITEMSTORE.ID_ITM 
	AND SUMM.ID_STR_RT = ITEMSTORE.ID_STR_RT 
	AND SUMM.ITEM_DEPT_ID = DEPT.ID_DPT_POS(+) 
	AND SUMM.ITEM_DEPT_ID = CLASS.ID_DPT(+) 
	AND SUMM.ITEM_CLSS_ID = CLASS.ID_CLSS(+) 
	AND NVL(SUMM.TYPE,'S') ='S' 
UNION ALL 
SELECT SUMM.ID_STR_RT ID_STR_RT, 
	DECODE(SUBSTR(SUMM.ITEM_DEPT_ID,1, 1), '1', 'GAW', '2', 'GAM', '3', 'GAUJUN', '4', 'EAW', '5', 'EAM', '6', 'EAU', '7', 'ACGIFT', '8', 'ACTEXT', '9', 'ACTABLE', '99') DIV, 
	SUMM.ITEM_DEPT_ID DEPT_ID, DEPT.NM_DPT_POS DEPT_NM  , NVL(SUMM.ITEM_CLSS_ID,'NONE') CLASS_ID, NVL(CLASS.NM_CLSS,'NONE') CLASS_NM, 
	SUMM.ID_ITM ITEM_ID,  ITEMSTORE.NM_ITM ITEM_NM, DECODE(SUMM.MISC_ITEM_ID, NULL, ITEM.BARCODE, SUMM.MISC_ITEM_ID) BARCODE, 
	SUMM.SALES_DATE SALES_DATE, 
	'0' SALE_MARKDOWN_AMT, '0' NET_SALE_AMT, 0 TOTAL_SALE_QTY, NVL(SUMM.MARKDOWN_AMT,'0')  RTN_MARKDOWN_AMT, 
	NVL(SUMM.NET_AMOUNT,'0') NET_RTN_AMT, TOTAL_QUANTITY TOTAL_RTN_QTY 
FROM RK_SALES_SUMMARY SUMM, AS_ITM ITEM,  AS_ITM_RTL_STR ITEMSTORE, ID_DPT_PS DEPT, ARM_CLASS CLASS 
WHERE SUMM.ID_ITM = ITEM.ID_ITM 
	AND ITEM.ID_ITM = ITEMSTORE.ID_ITM 
	AND SUMM.ID_STR_RT = ITEMSTORE.ID_STR_RT 
	AND SUMM.ITEM_DEPT_ID = DEPT.ID_DPT_POS(+) 
	AND SUMM.ITEM_DEPT_ID = CLASS.ID_DPT(+) 
	AND SUMM.ITEM_CLSS_ID = CLASS.ID_CLSS(+) 
	AND NVL(SUMM.TYPE,'S') ='R' 
);

CREATE OR REPLACE VIEW V_ARM_TXN_HDR
(CUST_ID, TY_TRN, PAY_TRN_TYPE, ID_STR_RT, ID_OPR, 
 TS_TRN_PRC, TS_TRN_SBM, TY_GUI_TRN, PAY_TYPES, TOTAL_AMT, 
 AI_TRN, CONSULTANT_ID, REDUCTION_AMOUNT, NET_AMOUNT, DISCOUNT_TYPES, 
 ITEMS_IDS, REGISTER_ID, FN_PRS, LN_PRS, EXP_DT, 
 REF_ID, VOID_ID)
AS 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, PA_EM.ARM_EXTERNAL_ID CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_PRS.EXP_DT, ARM_POS_PRS.ID_PRESALE REF_ID, TR_TRN.ID_VOID 
FROM TR_TRN INNER JOIN 
( 
	RK_PAY_TRN INNER JOIN 
	( 
		TR_RTL INNER JOIN ARM_POS_PRS ON TR_RTL.AI_TRN=ARM_POS_PRS.AI_TRN 
		LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS 
		LEFT OUTER JOIN PA_EM ON TR_RTL.CONSULTANT_ID=PA_EM.ID_EM 
		INNER JOIN (SELECT AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL WHERE NVL(FL_PROCESSED,'0') IN ('0') GROUP BY AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL 
		ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN 
	) 
	ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN 
) 
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN 
UNION ALL 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, PA_EM.ARM_EXTERNAL_ID CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_CSG.EXP_DT, ARM_POS_CSG.ID_CONSIGNMENT REF_ID, TR_TRN.ID_VOID 
FROM TR_TRN INNER JOIN 
( 
	RK_PAY_TRN INNER JOIN 
	( 
		TR_RTL INNER JOIN ARM_POS_CSG ON TR_RTL.AI_TRN=ARM_POS_CSG.AI_TRN 
		LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS 
		LEFT OUTER JOIN PA_EM ON TR_RTL.CONSULTANT_ID=PA_EM.ID_EM 
		INNER JOIN (SELECT AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL WHERE NVL(FL_PROCESSED,'0') IN ('0') GROUP BY AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL 
		ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN 
	) 
	ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN 
) 
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN 
UNION ALL 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, PA_EM.ARM_EXTERNAL_ID CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_RSV.EXP_DT, ARM_POS_RSV.ID_RESERVATION REF_ID, TR_TRN.ID_VOID 
FROM TR_TRN INNER JOIN 
( 
	RK_PAY_TRN INNER JOIN 
	( 
		TR_RTL INNER JOIN ARM_POS_RSV ON TR_RTL.AI_TRN=ARM_POS_RSV.AI_TRN 
		LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS 
		LEFT OUTER JOIN PA_EM ON TR_RTL.CONSULTANT_ID=PA_EM.ID_EM 
		INNER JOIN (SELECT RK_POS_LN_ITM_DTL.AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL INNER JOIN TR_LTM_RTL_TRN 
									ON RK_POS_LN_ITM_DTL.AI_TRN = TR_LTM_RTL_TRN.AI_TRN 
									 AND RK_POS_LN_ITM_DTL.AI_LN_ITM = TR_LTM_RTL_TRN.AI_LN_ITM 
									 WHERE NVL(FL_PROCESSED,'0') IN ('0') AND TR_LTM_RTL_TRN.POS_LN_ITM_TY_ID IN ('6') GROUP BY RK_POS_LN_ITM_DTL.AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL 
		ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN 
	) 
	ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN 
) 
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN;
