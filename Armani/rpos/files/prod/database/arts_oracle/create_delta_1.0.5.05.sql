CREATE OR REPLACE VIEW V_ARM_TXN_HDR
(CUST_ID, TY_TRN, PAY_TRN_TYPE, ID_STR_RT, ID_OPR, 
 TS_TRN_PRC, TS_TRN_SBM, TY_GUI_TRN, PAY_TYPES, TOTAL_AMT, 
 AI_TRN, CONSULTANT_ID, REDUCTION_AMOUNT, NET_AMOUNT, DISCOUNT_TYPES, 
 ITEMS_IDS, REGISTER_ID, FN_PRS, LN_PRS, EXP_DT, 
 REF_ID, VOID_ID)
AS 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT,
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM,
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT,
RK_PAY_TRN.AI_TRN, PA_EM.ARM_EXTERNAL_ID CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT,
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS,
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS,
ARM_POS_PRS.EXP_DT, ARM_POS_PRS.ID_PRESALE REF_ID, TR_TRN.ID_VOID
FROM TR_TRN INNER JOIN
(
RK_PAY_TRN INNER JOIN
(
TR_RTL INNER JOIN ARM_POS_PRS ON TR_RTL.AI_TRN=ARM_POS_PRS.AI_TRN
LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS
LEFT OUTER JOIN PA_EM ON TR_RTL.CONSULTANT_ID=PA_EM.ID_EM
INNER JOIN (SELECT AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL WHERE FL_PROCESSED IS NULL GROUP BY AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL
ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN
)
ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN
)
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN
UNION ALL
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT,
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM,
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT,
RK_PAY_TRN.AI_TRN, PA_EM.ARM_EXTERNAL_ID CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT,
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS,
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS,
ARM_POS_CSG.EXP_DT, ARM_POS_CSG.ID_CONSIGNMENT REF_ID, TR_TRN.ID_VOID
FROM TR_TRN INNER JOIN
(
RK_PAY_TRN INNER JOIN
(
TR_RTL INNER JOIN ARM_POS_CSG ON TR_RTL.AI_TRN=ARM_POS_CSG.AI_TRN
LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS
LEFT OUTER JOIN PA_EM ON TR_RTL.CONSULTANT_ID=PA_EM.ID_EM
INNER JOIN (SELECT AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL WHERE FL_PROCESSED IS NULL GROUP BY AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL
ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN
)
ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN
)
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN;


CREATE OR REPLACE VIEW "RK_TXN_HEADER" ("CUST_ID",
    "TY_TRN","ID_STR_RT","TY_STR_RT","ID_OPR","TS_TRN_PRC",
    "TS_TRN_SBM","TY_GUI_TRN","PAY_TYPES","TOTAL_AMT","AI_TRN",
    "CONSULTANT_ID","REDUCTION_AMOUNT","NET_AMOUNT",
    "DISCOUNT_TYPES","ITEMS_IDS","REGISTER_ID","FN_PRS","LN_PRS",
    "EXP_DT","REF_ID","CURRENCY_CD","IS_SHIPPING") AS 
    SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, TR_TRN.ID_STR_RT, 
    PA_STR_RTL.ID_BRAND,  
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM,  
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT,  
RK_PAY_TRN.AI_TRN, PA_EM.ARM_EXTERNAL_ID CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT,  
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS,  
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS,  
DECODE(RK_PAY_TRN.TYPE_ID, 'TRNPSO', ARM_POS_PRS.EXP_DT, 'TRNCGO', ARM_POS_CSG.EXP_DT, NULL) EXP_DT,  
DECODE(RK_PAY_TRN.TYPE_ID, 'TRNPSO', ARM_POS_PRS.ID_PRESALE, 'TRNCGO', ARM_POS_CSG.ID_CONSIGNMENT, NULL) REF_ID,  
PA_STR_RTL.TY_CNY CURRENCY_CD,  
DECODE(RK_SHIP_REQ.SEQ_NUM, NULL, 0, 1) IS_SHIPPING  
FROM TR_TRN INNER JOIN  
(  
     RK_PAY_TRN LEFT OUTER JOIN  
     (  
         TR_RTL LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID = PA_PRS.ID_PRTY_PRS  
         LEFT OUTER JOIN PA_EM ON TR_RTL.CONSULTANT_ID=PA_EM.ID_EM
         LEFT OUTER JOIN RK_SHIP_REQ ON (RK_SHIP_REQ.AI_TRN=TR_RTL.AI_TRN AND RK_SHIP_REQ.SEQ_NUM=0)  
         LEFT OUTER JOIN ARM_POS_PRS ON TR_RTL.AI_TRN = ARM_POS_PRS.AI_TRN  
         LEFT OUTER JOIN ARM_POS_CSG ON TR_RTL.AI_TRN = ARM_POS_CSG.AI_TRN  
     )  
     ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN  
)  
ON TR_TRN.AI_TRN=RK_PAY_TRN.AI_TRN AND TR_TRN.TY_TRN IN ('TRNPAY')  
INNER JOIN PA_STR_RTL ON TR_TRN.ID_STR_RT=PA_STR_RTL.ID_STR_RT;

ALTER TABLE ARM_TAX_RATE ADD TAX_JUR VARCHAR2(10);