CREATE TABLE ARM_POS_PRS ( 
  AI_TRN      VARCHAR2 (128)  NOT NULL, 
  ID_PRESALE  VARCHAR2 (128),
  EXP_DT      DATE
);

ALTER TABLE ARM_POS_PRS ADD PRIMARY KEY (AI_TRN);

ALTER TABLE ARM_POS_PRS ADD FOREIGN KEY (AI_TRN) REFERENCES TR_RTL (AI_TRN);

CREATE TABLE ARM_PRS_POS_LN_ITM_DTL ( 
  AI_TRN          VARCHAR2 (128)  NOT NULL, 
  AI_LN_ITM       NUMBER        NOT NULL, 
  SEQUENCE_NUM    NUMBER (3)    NOT NULL, 
  ORG_AI_TRN      VARCHAR2 (128), 
  ORIG_AI_LN_ITM  NUMBER, 
  ORIG_SEQ_NUM    NUMBER (3)
); 

ALTER TABLE ARM_PRS_POS_LN_ITM_DTL ADD PRIMARY KEY ( AI_TRN, AI_LN_ITM, SEQUENCE_NUM );

ALTER TABLE ARM_PRS_POS_LN_ITM_DTL ADD 
  FOREIGN KEY (AI_TRN,AI_LN_ITM,SEQUENCE_NUM) REFERENCES RK_POS_LN_ITM_DTL (AI_TRN,AI_LN_ITM,SEQUENCE_NUMBER);

ALTER TABLE ARM_PRS_POS_LN_ITM_DTL ADD 
  FOREIGN KEY (ORG_AI_TRN,ORIG_AI_LN_ITM,ORIG_SEQ_NUM) REFERENCES RK_POS_LN_ITM_DTL (AI_TRN,AI_LN_ITM,SEQUENCE_NUMBER);


ALTER TABLE RK_POS_LN_ITM_DTL ADD (
FL_PROCESSED CHAR(1),
POS_LN_ITM_TY_ID NUMBER(3)
);

CREATE TABLE ARM_POS_CSG ( 
  AI_TRN      	  VARCHAR2 (128)  NOT NULL, 
  ID_CONSIGNMENT  VARCHAR2 (128),
  EXP_DT      	  DATE
); 

ALTER TABLE ARM_POS_CSG ADD PRIMARY KEY (AI_TRN);

ALTER TABLE ARM_POS_CSG ADD FOREIGN KEY (AI_TRN) REFERENCES TR_RTL (AI_TRN);

CREATE TABLE ARM_CSG_POS_LN_ITM_DTL ( 
  AI_TRN          VARCHAR2 (128)  NOT NULL, 
  AI_LN_ITM       NUMBER        NOT NULL, 
  SEQUENCE_NUM    NUMBER (3)    NOT NULL, 
  ORG_AI_TRN      VARCHAR2 (128), 
  ORIG_AI_LN_ITM  NUMBER, 
  ORIG_SEQ_NUM    NUMBER (3)
); 

ALTER TABLE ARM_CSG_POS_LN_ITM_DTL ADD PRIMARY KEY ( AI_TRN, AI_LN_ITM, SEQUENCE_NUM );

ALTER TABLE ARM_CSG_POS_LN_ITM_DTL ADD 
  FOREIGN KEY (AI_TRN,AI_LN_ITM,SEQUENCE_NUM) REFERENCES RK_POS_LN_ITM_DTL (AI_TRN,AI_LN_ITM,SEQUENCE_NUMBER);

ALTER TABLE ARM_CSG_POS_LN_ITM_DTL ADD 
  FOREIGN KEY (ORG_AI_TRN,ORIG_AI_LN_ITM,ORIG_SEQ_NUM) REFERENCES RK_POS_LN_ITM_DTL (AI_TRN,AI_LN_ITM,SEQUENCE_NUMBER);

INSERT INTO RK_POS_LN_ITM_TYP ( ID, DESCRIPTION ) VALUES (4, 'PRESALE');
INSERT INTO RK_POS_LN_ITM_TYP ( ID, DESCRIPTION ) VALUES (5, 'CONSIGNMENT'); 

INSERT INTO CO_TYP_TRN ( TY_TRN, ID_RS ) VALUES ('TRNPSO', '170'); 
INSERT INTO CO_TYP_TRN ( TY_TRN, ID_RS ) VALUES ('TRNCGO', '180'); 

CREATE TABLE ARM_ITM_SOH
(
	ITEM_ID VARCHAR2(128),
	STORE_ID VARCHAR2(128),
	BALANCE_DATE DATE,
	QU_AVAILABLE NUMBER(4),
	QU_UNAVAILABLE NUMBER(4),
	FL_BALANCED CHAR(1),
	QU_SALE_TOTAL NUMBER(4),
	QU_RECEIPT NUMBER(4),
	QU_TRANSFER NUMBER(4),
	QU_STOCK_ADJ NUMBER(4),
	QU_ON_ORDER NUMBER(4),
	QU_STORE_AVAILABLE NUMBER(4),
	QU_STORE_UNAVAILABLE NUMBER(4)
);

ALTER TABLE ARM_ITM_SOH ADD PRIMARY KEY (ITEM_ID, STORE_ID);

ALTER TABLE ARM_ITM_SOH ADD FOREIGN KEY (ITEM_ID, STORE_ID) REFERENCES AS_ITM_RTL_STR(ID_ITM, ID_STR_RT);

ALTER TABLE RK_SHIP_REQ ADD (ADDRESS2 VARCHAR2(100));

ALTER TABLE LO_EML_ADS ADD TY_EML_ADS VARCHAR2(10);

CREATE OR REPLACE  VIEW RK_TXN_HEADER
(CUST_ID, TY_TRN, ID_STR_RT, ID_OPR, TS_TRN_PRC, 
 TS_TRN_SBM, TY_GUI_TRN, PAY_TYPES, TOTAL_AMT, AI_TRN, 
 CONSULTANT_ID, REDUCTION_AMOUNT, NET_AMOUNT, DISCOUNT_TYPES, ITEMS_IDS, 
 REGISTER_ID, FN_PRS, LN_PRS, EXP_DT, REF_ID)
AS 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, TR_RTL.CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
NULL EXP_DT, NULL REF_ID 
FROM RK_PAY_TRN, TR_TRN, TR_RTL,  PA_PRS 
WHERE TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN 
AND RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN (+) 
AND TR_RTL.CONSULTANT_ID = PA_PRS.ID_PRTY_PRS (+) 
AND TR_TRN.TY_TRN IN ('TRNPAY') AND RK_PAY_TRN.TYPE_ID NOT IN ('TRNPSO','TRNCGO')
UNION ALL
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, TR_RTL.CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_PRS.EXP_DT EXP_DT, ARM_POS_PRS.ID_PRESALE REF_ID 
FROM RK_PAY_TRN, TR_TRN, TR_RTL,  PA_PRS, ARM_POS_PRS
WHERE TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN
AND RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN (+) 
AND TR_RTL.CONSULTANT_ID = PA_PRS.ID_PRTY_PRS (+)
AND TR_RTL.AI_TRN = ARM_POS_PRS.AI_TRN 
UNION ALL
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, TR_RTL.CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_CSG.EXP_DT EXP_DT, ARM_POS_CSG.ID_CONSIGNMENT REF_ID 
FROM RK_PAY_TRN, TR_TRN, TR_RTL,  PA_PRS, ARM_POS_CSG
WHERE TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN 
AND RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN (+) 
AND TR_RTL.CONSULTANT_ID = PA_PRS.ID_PRTY_PRS (+)
AND TR_RTL.AI_TRN = ARM_POS_CSG.AI_TRN;

CREATE OR REPLACE VIEW V_ARM_TXN_HDR
(CUST_ID, TY_TRN, PAY_TRN_TYPE, ID_STR_RT, ID_OPR, 
 TS_TRN_PRC, TS_TRN_SBM, TY_GUI_TRN, PAY_TYPES, TOTAL_AMT, 
 AI_TRN, CONSULTANT_ID, REDUCTION_AMOUNT, NET_AMOUNT, DISCOUNT_TYPES, 
 ITEMS_IDS, REGISTER_ID, FN_PRS, LN_PRS, EXP_DT, 
 REF_ID)
AS 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, TR_RTL.CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_PRS.EXP_DT, ARM_POS_PRS.ID_PRESALE REF_ID 
FROM TR_TRN INNER JOIN 
( 
RK_PAY_TRN INNER JOIN 
( 
TR_RTL INNER JOIN ARM_POS_PRS ON TR_RTL.AI_TRN=ARM_POS_PRS.AI_TRN 
LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS 
INNER JOIN (SELECT AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL WHERE FL_PROCESSED IS NULL GROUP BY AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL 
ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN 
) 
ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN 
) 
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN 
UNION ALL 
SELECT RK_PAY_TRN.CUST_ID, TR_TRN.TY_TRN, RK_PAY_TRN.TYPE_ID PAY_TRN_TYPE, TR_TRN.ID_STR_RT, 
TR_TRN.ID_OPR, TR_TRN.TS_TRN_PRC, TR_TRN.TS_TRN_SBM, 
TR_TRN.TY_GUI_TRN, RK_PAY_TRN.PAY_TYPES, RK_PAY_TRN.TOTAL_AMT, 
RK_PAY_TRN.AI_TRN, TR_RTL.CONSULTANT_ID, TR_RTL.REDUCTION_AMOUNT, 
TR_RTL.NET_AMOUNT, TR_RTL.DISCOUNT_TYPES, TR_RTL.ITEMS_IDS, 
TR_RTL.REGISTER_ID, PA_PRS.FN_PRS, PA_PRS.LN_PRS, 
ARM_POS_CSG.EXP_DT, ARM_POS_CSG.ID_CONSIGNMENT REF_ID 
FROM TR_TRN INNER JOIN 
( 
RK_PAY_TRN INNER JOIN 
( 
TR_RTL INNER JOIN ARM_POS_CSG ON TR_RTL.AI_TRN=ARM_POS_CSG.AI_TRN 
LEFT OUTER JOIN PA_PRS ON TR_RTL.CONSULTANT_ID=PA_PRS.ID_PRTY_PRS 
INNER JOIN (SELECT AI_TRN, COUNT(*) FROM RK_POS_LN_ITM_DTL WHERE FL_PROCESSED IS NULL GROUP BY AI_TRN   HAVING COUNT(*) > 0) LN_ITM_DTL 
ON TR_RTL.AI_TRN = LN_ITM_DTL.AI_TRN 
) 
ON RK_PAY_TRN.AI_TRN = TR_RTL.AI_TRN 
) 
ON TR_TRN.AI_TRN = RK_PAY_TRN.AI_TRN;

ALTER TABLE ARM_CT_DTL ADD PRIMARY KEY (ID_CT);

ALTER TABLE ARM_CT_DTL ADD FOREIGN KEY (ID_CT) REFERENCES PA_CT(ID_CT);

ALTER TABLE ARM_ADS_PH ADD PRIMARY KEY (ID_ADS, ID_PH_TYP);

ALTER TABLE ARM_ADS_PH ADD FOREIGN KEY (ID_ADS) REFERENCES LO_ADS_NSTD(ID_ADS);

ALTER TABLE ARM_CT_ASSOC ADD PRIMARY KEY (ID_CT, ID_STR_RT);

ALTER TABLE ARM_CT_ASSOC ADD FOREIGN KEY (ID_CT) REFERENCES PA_CT(ID_CT);

ALTER TABLE ARM_CT_COMMENTS ADD PRIMARY KEY (ID_CT, ID_STR_RT);

ALTER TABLE ARM_CT_COMMENTS ADD FOREIGN KEY (ID_CT) REFERENCES PA_CT(ID_CT);

CREATE TABLE ARM_CT_XREF
(
  ID_CT         VARCHAR2(128),
  OLD_ID_CT     VARCHAR2(128),
  EFFECTIVE_DT  DATE
);