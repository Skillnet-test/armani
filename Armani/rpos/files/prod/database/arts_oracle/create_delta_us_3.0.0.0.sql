ALTER TABLE ARM_COLOR
MODIFY ID_COLOR VARCHAR2(10);

ALTER TABLE ARM_ASIS_TXN_DATA
ADD (TXN_AMOUNT VARCHAR2(75),
     ORDER_NO	VARCHAR2(50),
     ORDER_DATE	DATE,
     SUPPLIER_NO VARCHAR2(50),
     SUPPLIER_DATE DATE,
     NOTES VARCHAR2(200));

ALTER TABLE ARM_ASIS_TXN_DATA
MODIFY (FISCAL_RECEIPT_NO VARCHAR2(50),
	CUSTOMER_NO	VARCHAR2(50));

ALTER TABLE AS_ITM
MODIFY (ID_BRN VARCHAR2(10),
	ID_COLOR VARCHAR2(10));

ALTER TABLE RK_SALES_SUMMARY
MODIFY MISC_ITEM_ID VARCHAR2(40);

CREATE TABLE ARM_EMP_ALERT_RULE
(
  CD_CO        VARCHAR2(20),
  RECORD_TYPE  VARCHAR2(20),
  START_DATE   DATE,
  END_DATE     DATE,
  PRODUCT_CD   VARCHAR2(20),
  VALUE        VARCHAR2(20),
  PRIORITY     NUMBER
);

ALTER TABLE ARM_ALTERN_CODE
ADD (ED_CO         VARCHAR2(20),
     ED_LA         VARCHAR2(20));

CREATE TABLE ARM_DSC_RULE
(
  CD_DSC          VARCHAR2(10),
  START_RANGE     NUMBER(10,2),
  END_RANGE       NUMBER(10,2),
  IS_DSC_PERCENT  NUMBER(1),
  PERCENT         NUMBER(7,4),
  MO_DSC          NUMBER(10,2),
  CD_NOTE         VARCHAR2(25),
  ED_CO           VARCHAR2(20),
  ED_LA           VARCHAR2(20)
);

CREATE TABLE ARM_CUST_CREDIT_HIST
(
  DC_TRANSACTION  DATE,
  ID_STR_RT       VARCHAR2(128),
  AI_TRN          VARCHAR2(128),
  TY_TRN          VARCHAR2(60),
  CUST_ID         VARCHAR2(128),
  ASSOC           VARCHAR2(128),
  AMOUNT          VARCHAR2(75),
  FL_DELETED      CHAR(1)
);

CREATE OR REPLACE VIEW V_PURGE_TXN_DATA
(TXN_ID, REF_TXN_ID, SUBMIT_DT, TXN_TYPE, STORE_ID)
AS 
SELECT TR_TRN.AI_TRN TXN_ID, NVL(POS_TXN.ORIG_AI_TRN,'0') REF_TXN_ID, TR_TRN.TS_TRN_SBM SUBMIT_DT, TR_TRN.TY_TRN TXN_TYPE, TR_TRN.ID_STR_RT STORE_ID
FROM
TR_TRN LEFT OUTER JOIN
(
SELECT DISTINCT RK_POS_LN_ITM_DTL.AI_TRN AI_TRN,
DECODE(RK_POS_LN_ITM_DTL.POS_LN_ITM_TY_ID, '4', ARM_PRS_POS_LN_ITM_DTL.ORG_AI_TRN, '5',
ARM_CSG_POS_LN_ITM_DTL.ORG_AI_TRN, '6', ARM_RSV_POS_LN_ITM_DTL.ORG_AI_TRN, NVL(RK_RTN_POS_LN_ITM.SALE_AI_TRN, '0')) ORIG_AI_TRN
FROM
RK_POS_LN_ITM_DTL
INNER JOIN TR_LTM_RTL_TRN ON RK_POS_LN_ITM_DTL.AI_TRN=TR_LTM_RTL_TRN.AI_TRN
INNER JOIN (SELECT DISTINCT RK_POS_LN_ITM_DTL.AI_TRN FROM RK_POS_LN_ITM_DTL
    INNER JOIN TR_LTM_RTL_TRN ON RK_POS_LN_ITM_DTL.AI_TRN=TR_LTM_RTL_TRN.AI_TRN
    AND  RK_POS_LN_ITM_DTL.AI_LN_ITM=TR_LTM_RTL_TRN.AI_LN_ITM
    AND TR_LTM_RTL_TRN.POS_LN_ITM_TY_ID IN ('4','5','6')
    AND NVL(RK_POS_LN_ITM_DTL.FL_PROCESSED,'0') ='0'
    GROUP BY  RK_POS_LN_ITM_DTL.AI_TRN
    HAVING COUNT(*) > 0) PROCESSED_LN_ITM
ON RK_POS_LN_ITM_DTL .AI_TRN<>PROCESSED_LN_ITM.AI_TRN
LEFT OUTER JOIN ARM_CSG_POS_LN_ITM_DTL ON (ARM_CSG_POS_LN_ITM_DTL.AI_TRN=RK_POS_LN_ITM_DTL.AI_TRN AND ARM_CSG_POS_LN_ITM_DTL.AI_LN_ITM =RK_POS_LN_ITM_DTL.AI_LN_ITM
AND ARM_CSG_POS_LN_ITM_DTL.SEQUENCE_NUM=RK_POS_LN_ITM_DTL.SEQUENCE_NUMBER)
LEFT OUTER JOIN ARM_PRS_POS_LN_ITM_DTL ON (ARM_PRS_POS_LN_ITM_DTL.AI_TRN=RK_POS_LN_ITM_DTL.AI_TRN AND ARM_PRS_POS_LN_ITM_DTL.AI_LN_ITM =RK_POS_LN_ITM_DTL.AI_LN_ITM
AND ARM_PRS_POS_LN_ITM_DTL.SEQUENCE_NUM=RK_POS_LN_ITM_DTL.SEQUENCE_NUMBER)
LEFT OUTER JOIN ARM_RSV_POS_LN_ITM_DTL ON (ARM_RSV_POS_LN_ITM_DTL.AI_TRN=RK_POS_LN_ITM_DTL.AI_TRN AND ARM_RSV_POS_LN_ITM_DTL.AI_LN_ITM =RK_POS_LN_ITM_DTL.AI_LN_ITM
AND ARM_RSV_POS_LN_ITM_DTL.SEQUENCE_NUM=RK_POS_LN_ITM_DTL.SEQUENCE_NUMBER)
LEFT OUTER JOIN RK_RTN_POS_LN_ITM ON (RK_RTN_POS_LN_ITM.RTN_AI_TRN=RK_POS_LN_ITM_DTL.AI_TRN AND RK_RTN_POS_LN_ITM.RTN_AI_LN_ITM =RK_POS_LN_ITM_DTL.AI_LN_ITM
AND RK_RTN_POS_LN_ITM.SEQUENCE_NUMBER=RK_POS_LN_ITM_DTL.SEQUENCE_NUMBER)
AND  RK_POS_LN_ITM_DTL.AI_LN_ITM=TR_LTM_RTL_TRN.AI_LN_ITM
GROUP BY RK_POS_LN_ITM_DTL.AI_TRN, DECODE(RK_POS_LN_ITM_DTL.POS_LN_ITM_TY_ID, '4', ARM_PRS_POS_LN_ITM_DTL.ORG_AI_TRN, '5',
ARM_CSG_POS_LN_ITM_DTL.ORG_AI_TRN, '6', ARM_RSV_POS_LN_ITM_DTL.ORG_AI_TRN, NVL(RK_RTN_POS_LN_ITM.SALE_AI_TRN, '0'))
) POS_TXN
ON TR_TRN.AI_TRN=POS_TXN.AI_TRN
ORDER BY REF_TXN_ID DESC,TXN_ID DESC;

CREATE OR REPLACE VIEW V_ARM_CUST_RULE_DATA
(NET_AMOUNT, QUANTITY, PRODUCT_CD, RECORD_TYPE, ID_CT, 
 ED_CO)
AS 
SELECT ARM_UTIL_PKG.CONVERT_TO_CURRENCY(NET_AMOUNT, TY_CNY, '0') NET_AMOUNT, QUANTITY, PRODUCT_CD, RECORD_TYPE, ID_CT, ED_CO 
FROM 
(
 SELECT SUM(DECODE(TXN_TYPE, 'SALE', ARM_UTIL_PKG.CONVERT_TO_NUMBER(TXN_AMOUNT, PA_STR_RTL.TY_CNY), 'RETN', ARM_UTIL_PKG.CONVERT_TO_NUMBER(TXN_AMOUNT, PA_STR_RTL.TY_CNY) * -1, 0)) NET_AMOUNT,
  SUM(0) QUANTITY, 
  '' PRODUCT_CD, 
  RECORD_TYPE, 
  ID_CT,  
  PA_PRTY.ED_CO,
  PA_STR_RTL.TY_CNY 
 FROM ARM_CUST_SALE_SUMMARY 
 INNER JOIN PA_STR_RTL ON ARM_CUST_SALE_SUMMARY.ID_STR_RT = PA_STR_RTL.ID_STR_RT 
 INNER JOIN ARM_EMP_ALERT_RULE ON ARM_EMP_ALERT_RULE.RECORD_TYPE = 'TOT' 
     AND ARM_CUST_SALE_SUMMARY.TXN_DATE BETWEEN ARM_EMP_ALERT_RULE.START_DATE AND ARM_EMP_ALERT_RULE.END_DATE 
 INNER JOIN PA_PRTY ON ARM_CUST_SALE_SUMMARY.ID_STR_RT=PA_PRTY.ID_PRTY AND ARM_EMP_ALERT_RULE.CD_CO = PA_PRTY.ED_CO 
 GROUP BY RECORD_TYPE,ID_CT, PA_PRTY.ED_CO,PA_STR_RTL.TY_CNY 
 UNION ALL 
 SELECT SUM(0) NET_AMOUNT,
  SUM(TR_LTM_RTL_TRN.QUANTITY) QUANTITY,   
  PRODUCT_CD,
  RULE.RECORD_TYPE,
  RK_PAY_TRN.CUST_ID, 
  PA_PRTY.ED_CO, 
  '' TY_CNY 
 FROM RK_PAY_TRN, TR_LTM_RTL_TRN, AS_ITM, ARM_EMP_ALERT_RULE RULE, TR_TRN, PA_PRTY 
  WHERE RK_PAY_TRN.AI_TRN = TR_LTM_RTL_TRN.AI_TRN 
  AND TR_LTM_RTL_TRN.ID_ITM = AS_ITM.ID_ITM 
  AND AS_ITM.PRODUCT_NUM = RULE.PRODUCT_CD 
  AND RK_PAY_TRN.AI_TRN = TR_TRN.AI_TRN 
  AND TR_TRN.TS_TRN_PRC BETWEEN RULE.START_DATE AND RULE.END_DATE 
  AND TR_TRN.ID_STR_RT = PA_PRTY.ID_PRTY 
  AND RULE.CD_CO = PA_PRTY.ED_CO 
  AND RULE.RECORD_TYPE = 'PRO' 
 GROUP BY PRODUCT_CD, RULE.RECORD_TYPE,RK_PAY_TRN.CUST_ID, PA_PRTY.ED_CO 
);

CREATE OR REPLACE VIEW V_ARM_PREMIO_HIST
(STORE_NAME, TXN_NUM, TXN_DATE, REDEEMED_POINTS, TXN_AMT, 
 LOYALTY_NUM)
AS 
SELECT DISTINCT 
PA_STR_RTL.DE_STR_RT AS STORE_NAME, 
TR_LTM_CPN_TND.AI_TRN AS TXN_NUM, 
TR_LTM_CPN_TND.DC_DY_BSN AS TXN_DATE, 
TR_LTM_CPN_TND.ID_WS AS REDEEMED_POINTS, 
TR_LTM_TND.MO_ITM_LN_TND AS TXN_AMT, 
TR_LTM_CPN_TND.UC_CPN_SC AS LOYALTY_NUM 
FROM 
PA_STR_RTL,TR_LTM_CPN_TND, TR_LTM_TND 
WHERE 
( TR_LTM_TND.TY_TND = 'PREMIO_DISCOUNT' 
AND TR_LTM_TND.AI_TRN = TR_LTM_CPN_TND.AI_TRN 
AND PA_STR_RTL.ID_STR_RT = TR_LTM_CPN_TND.ID_STR_RT) 
ORDER BY 
TXN_DATE DESC, 
STORE_NAME DESC;

ALTER TABLE ARM_LOYALTY
ADD (CURRENT_YEAR_BAL NUMBER(15,2),
     LAST_YEAR_BAL NUMBER(15,2),
     SECOND_LAST_YEAR_BAL NUMBER(15,2));

ALTER TABLE ARM_LOYALTY_RULE
MODIFY POINTS NUMBER(8,4);

ALTER TABLE TR_RTL
ADD LOYALTY_POINTS_EARNED NUMBER(7);




