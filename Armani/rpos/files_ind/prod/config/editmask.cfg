

#User defined class paths for the various mask, the keys are not modifiable. Any new mask
#have to be written and added to the Mask Manager
# EX: KEY_WORD = class.path

CLASS_MASK= com.chelseasystems.cr.appmgr.mask.ClassMask
#CURRENCY_MASK= com.chelseasystems.cr.appmgr.mask.CurrencyMask
CURRENCY_MASK=com.chelseasystems.cs.appmgr.mask.CMSCurrencyMask
#DATE_MASK= com.chelseasystems.cr.appmgr.mask.DateMask
DATE_MASK= com.chelseasystems.cs.swing.mask.DateChooserMask
DOUBLE_MASK= com.chelseasystems.cr.appmgr.mask.DoubleMask
EMP_CARD_SCAN_MASK= com.chelseasystems.cr.appmgr.mask.EmployeeIDCardScanMask
INTEGER_MASK= com.chelseasystems.cr.appmgr.mask.IntegerMask
ITEM_MASK= com.chelseasystems.cr.appmgr.mask.ItemCodeMask
MONTH_YEAR_MASK= com.chelseasystems.cr.appmgr.mask.MonthYearMask
NDC_CODE_MASK= com.chelseasystems.cr.appmgr.mask.RequiredMask
PASSWORD_MASK= com.chelseasystems.cr.appmgr.mask.SocialSecurityMask
PHONE_MASK= com.chelseasystems.cr.appmgr.mask.TelephoneMask
REQUIRED_MASK= com.chelseasystems.cr.appmgr.mask.RequiredMask
SKU_MASK= com.chelseasystems.cr.appmgr.mask.SkuMask
SSN_MASK= com.chelseasystems.cr.appmgr.mask.SocialSecurityMask
TRANS_ID_MASK= com.chelseasystems.cr.appmgr.mask.TransIDMask
TIME_OF_DAY_MASK= com.chelseasystems.cr.appmgr.mask.TimeMask
UPPER_CASE_MASK= com.chelseasystems.cr.appmgr.mask.UpperCaseMask
USER_NAME_MASK= com.chelseasystems.cr.appmgr.mask.EmployeeIDCardScanMask
TIME_DURATION_MASK= com.chelseasystems.cr.appmgr.mask.TimeDurationMask
NO_MASK= com.chelseasystems.cr.appmgr.mask.NoMask
INPUT_IS_OPTIONAL_MASK= com.chelseasystems.cr.appmgr.mask.InputIsOptionalMask

# A customer may define any custom masks they need here.
# Instructions for defining a custom mask:
# 1) Define mask integer key (customer's must be >= 1000, Retek will
#    use <500 for pre-existing masks, 500-999 for new dynamic masks)
# 2) Specify the mask class you want to use in this config
# 3) Specify how you want the result cast and the overload 
#    you want applied to the editAreaEvent call that the result
#    will be passed to.  You may specify that you want the Integer,
#    Date, Currency, Double, or Object version of the method called.
# 4) Add the mask integer key and mnemonic to CMSMaskConstants
# 5) Write the actual mask class that performs the editting. 
#    This class must implement IMask.  You may inherit from MaskGenericRenderer 
#    or provide your own rendering method (default is to call toString).
# 6) that's all there is to it, Appmgr can now recognize and apply your mask!

DYNAMIC_MASKS=THREE_DIGIT_INTEGER_MASK,DATECHOOSER_MASK,PHONE_MASK,CUSTOMER_HOME_TELEPHONE_MASK

THREE_DIGIT_INTEGER_MASK.ID=500
THREE_DIGIT_INTEGER_MASK.CLASS=com.chelseasystems.cs.swing.mask.ThreeDigitIntegerMask
THREE_DIGIT_INTEGER_MASK.OBJECT_TYPE=Integer
THREE_DIGIT_INTEGER_MASK.IS_PROTECTED=false

DATECHOOSER_MASK.ID=501
DATECHOOSER_MASK.CLASS=com.chelseasystems.cs.swing.mask.DateChooserMask
DATECHOOSER_MASK.OBJECT_TYPE=Date
DATECHOOSER_MASK.IS_PROTECTED=false

PHONE_MASK.ID=3
PHONE_MASK.CLASS=com.chelseasystems.cr.appmgr.mask.TelephoneMask
PHONE_MASK.OBJECT_TYPE=Object
PHONE_MASK.IS_PROTECTED=false

CUSTOMER_HOME_TELEPHONE_MASK.ID=22
CUSTOMER_HOME_TELEPHONE_MASK.CLASS=com.chelseasystems.cr.appmgr.mask.CustomerHomeTelephoneMask
CUSTOMER_HOME_TELEPHONE_MASK.OBJECT_TYPE=Object
CUSTOMER_HOME_TELEPHONE_MASK.IS_PROTECTED=false


