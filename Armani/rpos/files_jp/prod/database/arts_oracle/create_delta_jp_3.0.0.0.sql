ALTER TABLE ARM_POS_PRS
ADD (CREDIT_CARD_NUMBER           VARCHAR2(128),
     CREDIT_CARD_TYPE             VARCHAR2(40),
     CREDIT_CARD_EXPIRATION_DATE  DATE,
     BILLING_ZIP_CODE             VARCHAR2(20));

ALTER TABLE RK_EOD
ADD MGR_SAYS_MALLCERTIFICATE  VARCHAR2(75);

ALTER TABLE ARM_ASIS_TXN_DATA
ADD (TXN_AMOUNT VARCHAR2(75),
     ORDER_NO	VARCHAR2(50),
     ORDER_DATE	DATE,
     SUPPLIER_NO VARCHAR2(50),
     SUPPLIER_DATE DATE,
     NOTES VARCHAR2(200));

ALTER TABLE ARM_ALTERN_CODE
ADD (ED_CO         VARCHAR2(20),
     ED_LA         VARCHAR2(20));

ALTER TABLE ARM_ALTERN_CODE
ADD (ED_CO         VARCHAR2(20),
     ED_LA         VARCHAR2(20));

CREATE TABLE ARM_EMP_ALERT_RULE
(
  CD_CO        VARCHAR2(20),
  RECORD_TYPE  VARCHAR2(20),
  START_DATE   DATE,
  END_DATE     DATE,
  PRODUCT_CD   VARCHAR2(20),
  VALUE        VARCHAR2(20),
  PRIORITY     NUMBER
);

CREATE TABLE ARM_DSC_RULE
(
  CD_DSC          VARCHAR2(10),
  START_RANGE     NUMBER(10,2),
  END_RANGE       NUMBER(10,2),
  IS_DSC_PERCENT  NUMBER(1),
  PERCENT         NUMBER(7,4),
  MO_DSC          NUMBER(10,2),
  CD_NOTE         VARCHAR2(25),
  ED_CO           VARCHAR2(20),
  ED_LA           VARCHAR2(20)
);

CREATE TABLE ARM_CUST_CREDIT_HIST
(
  DC_TRANSACTION  DATE,
  ID_STR_RT       VARCHAR2(128),
  AI_TRN          VARCHAR2(128),
  TY_TRN          VARCHAR2(60),
  CUST_ID         VARCHAR2(128),
  ASSOC           VARCHAR2(128),
  AMOUNT          VARCHAR2(75),
  FL_DELETED      CHAR(1)
);

CREATE OR REPLACE VIEW V_ARM_CUST_RULE_DATA
(NET_AMOUNT, QUANTITY, PRODUCT_CD, RECORD_TYPE, ID_CT, 
 ED_CO)
AS 
SELECT ARM_UTIL_PKG.CONVERT_TO_CURRENCY(NET_AMOUNT, TY_CNY, '0') NET_AMOUNT, QUANTITY, PRODUCT_CD, RECORD_TYPE, ID_CT, ED_CO 
FROM 
(
 SELECT SUM(DECODE(TXN_TYPE, 'SALE', ARM_UTIL_PKG.CONVERT_TO_NUMBER(TXN_AMOUNT, PA_STR_RTL.TY_CNY), 'RETN', ARM_UTIL_PKG.CONVERT_TO_NUMBER(TXN_AMOUNT, PA_STR_RTL.TY_CNY) * -1, 0)) NET_AMOUNT,
  SUM(0) QUANTITY, 
  '' PRODUCT_CD, 
  RECORD_TYPE, 
  ID_CT,  
  PA_PRTY.ED_CO,
  PA_STR_RTL.TY_CNY 
 FROM ARM_CUST_SALE_SUMMARY 
 INNER JOIN PA_STR_RTL ON ARM_CUST_SALE_SUMMARY.ID_STR_RT = PA_STR_RTL.ID_STR_RT 
 INNER JOIN ARM_EMP_ALERT_RULE ON ARM_EMP_ALERT_RULE.RECORD_TYPE = 'TOT' 
     AND ARM_CUST_SALE_SUMMARY.TXN_DATE BETWEEN ARM_EMP_ALERT_RULE.START_DATE AND ARM_EMP_ALERT_RULE.END_DATE 
 INNER JOIN PA_PRTY ON ARM_CUST_SALE_SUMMARY.ID_STR_RT=PA_PRTY.ID_PRTY AND ARM_EMP_ALERT_RULE.CD_CO = PA_PRTY.ED_CO 
 GROUP BY RECORD_TYPE,ID_CT, PA_PRTY.ED_CO,PA_STR_RTL.TY_CNY 
 UNION ALL 
 SELECT SUM(0) NET_AMOUNT,
  SUM(TR_LTM_RTL_TRN.QUANTITY) QUANTITY,   
  PRODUCT_CD,
  RULE.RECORD_TYPE,
  RK_PAY_TRN.CUST_ID, 
  PA_PRTY.ED_CO, 
  '' TY_CNY 
 FROM RK_PAY_TRN, TR_LTM_RTL_TRN, AS_ITM, ARM_EMP_ALERT_RULE RULE, TR_TRN, PA_PRTY 
  WHERE RK_PAY_TRN.AI_TRN = TR_LTM_RTL_TRN.AI_TRN 
  AND TR_LTM_RTL_TRN.ID_ITM = AS_ITM.ID_ITM 
  AND AS_ITM.PRODUCT_NUM = RULE.PRODUCT_CD 
  AND RK_PAY_TRN.AI_TRN = TR_TRN.AI_TRN 
  AND TR_TRN.TS_TRN_PRC BETWEEN RULE.START_DATE AND RULE.END_DATE 
  AND TR_TRN.ID_STR_RT = PA_PRTY.ID_PRTY 
  AND RULE.CD_CO = PA_PRTY.ED_CO 
  AND RULE.RECORD_TYPE = 'PRO' 
 GROUP BY PRODUCT_CD, RULE.RECORD_TYPE,RK_PAY_TRN.CUST_ID, PA_PRTY.ED_CO 
);

ALTER TABLE RK_SALES_SUMMARY
MODIFY MISC_ITEM_ID VARCHAR2(40);

ALTER TABLE ARM_COLOR
MODIFY ID_COLOR VARCHAR2(10);

ALTER TABLE AS_ITM
MODIFY (ID_BRN VARCHAR2(10),
	ID_COLOR VARCHAR2(10));

CREATE OR REPLACE VIEW V_ARM_TXN_ITEM
(ID_ITM, BARCODE, ID_STR_RT, FY, SEASON, 
 DE_SEASON, ID_SPR, NM_SPR, MODEL, FABRIC, 
 ID_COLOR, DE_COLOR, NM_ITM, STYLE_NUM)
AS 
SELECT 
AS_ITM.ID_ITM			ID_ITM 
, AS_ITM.BARCODE		BARCODE 
, AS_ITM_RTL_STR.ID_STR_RT	ID_STR_RT 
, AS_ITM.FY			FY 
, AS_ITM.LU_SN		SEASON 
, ARM_SEASON.DE_SEASON		DE_SEASON 
, AS_ITM.ID_SPR			ID_SPR 
, ARM_SPR.NM_SPR		NM_SPR 
, AS_ITM.MODEL			MODEL 
, AS_ITM.FABRIC			FABRIC 
, AS_ITM.ID_COLOR		ID_COLOR 
, ARM_COLOR.DE_COLOR		DE_COLOR 
, AS_ITM_RTL_STR.NM_ITM			NM_ITM 
, AS_ITM.STYLE_NUM		STYLE_NUM 
FROM 
AS_ITM INNER JOIN 
( 
	AS_ITM_RTL_STR INNER JOIN PA_PRTY ON AS_ITM_RTL_STR.ID_STR_RT = 
PA_PRTY.ID_PRTY 
) 
ON AS_ITM.ID_ITM = AS_ITM_RTL_STR.ID_ITM 
LEFT OUTER JOIN ARM_SEASON ON (AS_ITM.LU_SN=ARM_SEASON.ID_SEASON AND 
PA_PRTY.ED_LA=ARM_SEASON.ED_LA AND PA_PRTY.ED_CO=ARM_SEASON.ED_CO) 
LEFT OUTER JOIN ARM_COLOR ON (AS_ITM.ID_COLOR=ARM_COLOR.ID_COLOR) 
LEFT OUTER JOIN ARM_SPR ON (AS_ITM.ID_SPR=ARM_SPR.ID_SPR);
